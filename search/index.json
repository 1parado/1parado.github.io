[{"content":"\r数组 二分查找 1.https://leetcode.cn/problems/binary-search/description/ 用时：4.33 解题思路：数组有序 返回下标（查找元素）\u0026ndash;\u0026gt; 二分法 这里采用左闭右闭区间[low,high]所以while判断的时候是low \u0026lt;= high\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 int low = 0; int high = nums.length - 1; int mid = (low + high)/2; // int mid = low + （high - low）/ 2；防止溢出 while(low \u0026lt;= high){ if(nums[mid] == target){ return mid; }else if(nums[mid] \u0026gt; target){ high = mid - 1; class Solution { public int searc mid = (low + high)/2; }else{ low = mid + 1; mid = (low + high)/2; } } return -1; } } 2.https://leetcode.cn/problems/search-insert-position/description/ 用时：15.54 犯的问题：粗心把high初始化的时候设置成nums.length了，2，3，4情况返回值应该是high+1（要想明白为什么是high+1）\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public int searchInsert(int[] nums, int target) { // 可能出现的情况四种1.找到nums[mid] = target // 2.没出现 目标值在最前面 // 3.没出现 目标值在最后面 // 4.没出现 目标值在某个区间 // 2 3 4 要保证统一返回 int low = 0; int high = nums.length - 1; int mid = (high + low)/2; while(low \u0026lt;= high){ if(nums[mid] == target){ return mid; }else if(nums[mid] \u0026gt; target){ high = mid - 1; mid = (high + low)/2; }else{ low = mid + 1; mid = (high + low)/2; } } return high + 1; } } 3.https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/ 没思路\n移除元素 1.https://leetcode.cn/problems/remove-element/description/ 思路：我一想到双指针脑子里面总是会想让i指向0，j指向i+1或者就是i指向0，j指向length-1.实际上的情况比这更复杂，不能用这种惯性思维来做题。（这道题是看了代码随想录的演示动画自己写的while循环 其实for循环比这个简单）\n首先确定指针表示的含义 i是指向新的子数组的下标，新数组中不允许有val j是用于找到非val值用于交换的元素 初始化：i=j=0 在循环中i和j的变化分情况讨论 nums[i]！=val时 不需要交换 只需要i和j同时向后移动即可 nums[i]==val时 分两种情况 nums[j]==val时，需要让j自己移动到不为val的地方，变成nums[j]!=val的情况 然后进行交换 交换后i和j再同时移动 循环终止条件：当j到达length - 1 的时候循环终止\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public int removeElement(int[] nums, int val) { // i指针指向的数组中不允许有val j指针用于找到非val的元素 // 指针初始化位置 i=j=0 int i = 0; int j = 0; while(j \u0026lt;= nums.length - 1){ if(nums[i]==val){ if(nums[j]!=val){ int temp = nums[i]; nums[i] = nums[j]; nums[j] = temp; i++; j++; }else{ j++; } }else{ i++; j++; } } return i; } } 2.https://leetcode.cn/problems/remove-duplicates-from-sorted-array/description/\n","date":"2025-10-17T00:00:00Z","permalink":"https://1parado.github.io/p/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/","title":"代码随想录"},{"content":"\rRuoYi-Vue-Pro: https://doc.iocoder.cn/quick-start/\n后端版本:我下载的mini版本的，只有一些简单的功能，其中的一些功能是受限的 https://github.com/YunaiV/ruoyi-vue-pro\n前端版本：Vue3 + element-plus 版本 https://github.com/yudaocode/yudao-ui-admin-vue3/\n按照RuoYi配置文档一步一步来其实挺好搭建的，主要是要先配置环境。\n","date":"2025-10-16T00:00:00Z","permalink":"https://1parado.github.io/p/ruoyi%E6%A1%86%E6%9E%B6/","title":"RuoYi框架"},{"content":"\r⚫ 找论文的一些网站（有些网站要翻墙） Google scholar⭐⭐⭐⭐⭐： 可以配合谷歌插件Easy scholar直接显示期刊的等级和影响因子 2.Web of science⭐⭐⭐\n3.Sciencedirect⭐⭐⭐\n4.Ieeexplore⭐⭐⭐\n5.Arxiv⭐⭐预印的期刊，文章比较新但可能有小错误\n6.CNKI 中文知网⭐⭐\n⚫ 文献管理工具： Zotero + 翻译插件: https://blog.csdn.net/xiaoningaijishu/article/details/151042814\nIma腾讯推出的个人知识库（英文不好的强烈推荐！）把论文上传到知识库中，然后全局翻译，翻译的很准确，而且可以根据知识库进行提问。\n小绿鲸（我没用过，看师兄用过）: https://www.xljsci.com/\n⚫ 笔记软件： Notion，Obsidian，Ima，Typora, Cherry studio\u0026hellip;推荐Obisidian 轻量化（但其实没有做笔记的习惯的话不下载也可以）\n⚫ 用于论文写作的一些工具 overleaf是一款在线编写latex格式的论文写作软件，可以配合浏览器插件Grammarly检查语法错误 https://app.grammarly.com/\noverleaf模板: https://cn.overleaf.com/latex/templates 点 Journal Article 找对应的论文模板格式下载压缩包 导入到overleaf即可编写操作\n习惯用Vs code的可以在vscode中下载overleaf的插件 直接在vscode中编写也可:https://zhuanlan.zhihu.com/p/29808221714\n⚫ 好用的网站： 表转latex格式 https://tablesgenerator.com/\nlatex公式在线编写： https://www.latexlive.com/home\nCanva做汇报ppt: https://www.canva.cn/\nBoardmix做思维导图: https://boardmix.cn/app/home\nProcesson做流程图: https://www.processon.com/\nVison也可以画流程图，可以导出矢量图.svg格式，适合放在文章里面做流程图:https://blog.csdn.net/laowangpython/article/details/147465427\n⚫ AI工具： 我常用的ai就是下面这些，主推GPT和Grok，其他的可以在论文写作的时候，优化论文表达的时候用。【小技巧：可以自己写中文初稿，然后让gpt翻译成英文，再截图让gpt生成latex格式，直接复制到overleaf里即可，英文好的话直接用英文写也可以】\n1.chatgpt: https://chatgpt.com/\n2.grok: https://grok.com/\n3.kimi: https://www.kimi.com/\n4.deepseek: https://chat.deepseek.com/\n每个课题组的研究方向不一样，发论文的难度也不一样，下面只是我的研究过程： 先确定研究方向，然后读最新的几篇综述（最好选英文文献，中文也可以），然后找一篇感觉能复现出来的文章进行复现（可以发邮件给作者看看能不能要到源码，最好多问几个，真的有人愿意给的/用AI帮忙），然后在该文章的基础上想一下有没有可以新增的点（看论文的未来展望/和其他论文模型进行融合），一篇好的论文需要天时地利人和，EI会议随便写，好多都是论文A的模块 + 论文B的模块整合到一起得到自己的创新模型。\n以我们组的研究方向为例：网络弹性量化（Cyber resilience quantification），在文献搜索网站上面搜关键词，然后读几篇综述，大致了解一下网络弹性评估包括车联网，信息关键基础设施网络，电网，无人机集群网络\u0026hellip;.本来是研究车联网的，然后组会汇报两次无人机相关文章，莫名其妙研究方向变成无人机了，也算找到了研究领域:无人机集群网络弹性评估。然后读无人机集群网络弹性评估的文章，暑假开始，老师让复现文章，刚开始一直没复现出来，联系好多文章作者要源码，最后有一个学长给了我他的部分代码，然后复现他的这篇文章，在他的文章基础上加了一些模块解决了一些现有研究领域没有解决的问题。（文章还没发，不敢把论文放网上）满打满算两个多月写一篇EI是够用的。\n","date":"2025-10-16T00:00:00Z","permalink":"https://1parado.github.io/p/%E7%A7%91%E7%A0%94%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/","title":"科研论文写作"},{"content":"参考链接：https://javaguide.cn/database/mysql/mysql-questions-01.html\n📚 目录 介绍 安装 使用方法 示例代码 截图 许可证 介绍 这是一个示例项目，用于演示 Markdown 的写法。\n你可以在这里添加项目简介、功能说明或使用目的。\n","date":"2025-10-15T00:00:00Z","permalink":"https://1parado.github.io/p/mysql-%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98/","title":"Mysql 常见面试题"},{"content":"2025.10.15 这是创建的 思维导图\n","date":"2025-10-15T00:00:00Z","permalink":"https://1parado.github.io/p/%E4%BB%BF%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F/","title":"仿教务系统"},{"content":"记录一下创建个人博客的过程。欢迎阅读！\n用到的工具：Github Page + Hugo\n参考链接： https://bright9911.github.io/\n","date":"2025-10-14T00:00:00Z","permalink":"https://1parado.github.io/p/github-page--hugo-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%93%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"GitHub page + hugo 搭建一个专属于自己的个人博客"}]